var express = require('express');
var router = express.Router();
const db = require('../models');
var request = require('request');
var indico = require('indico.io');
indico.apiKey =  '7a00385289015143942a0b624681cd19';
const clientId = '8945a218b217c4f';
var multer = require('multer');
var upload = multer({ dest: '../uploads/' });
// const clientSecret = '1f67214be6fde71891ee7ce43c89ee7f55fd411a';
// var cloudinary = require('cloudinary').v2;

// cloudinary.config({
//   cloud_name: 'emotionalbreakdown',
//   api_key: '132364516727196',
//   api_secret: 'hiGy0GK10XUpXsUC9DLxeMAqYrU'
// });

/* GET all images */
router.get('/', (req, res) => {
    db.image.findAll()
    .then((images) => {
        res.json(images)
    })
    .catch(err => res.json(err));
});

/* GET image by ID */
router.get('/*', (req, res) => {
    db.image.find({
        where: { id: req.path.replace(/[^-a-z0-9]+/g, "") } // hard coded for testing
      })
    .then((image) => {
      if(image) {
        res.json(image)
      } else {
        res.json({'message': 'no image found!'})
      }
    })
    .catch(err => res.json(err));
});

// /* POST image */
router.post('/', (req, res) => {
  console.log('~~~~~~~~~~~~~REQ FILE~~~~~~~~~~~~~: ', req.file);
//   cloudinary.uploader.upload(req.body.image,{tags:'test'}, function(err,image){
//   console.log("** File Upload");
//   if (err){ console.log(err);}
//   console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
//   console.log("* "+image.public_id);
//   console.log("* "+image.url);
//   // waitForAllUploads("pizza",err,image);
// });

  // post file to imgur to generate url
  request({
      url: 'https://api.imgur.com/3/image',
      method: 'POST',
      json: true,
      headers: {
          'authorization': `Client-ID ${clientId}`,
          'content-type': 'application/json'
      },
      body: { image: req.body.image } // image must be a binary file, base64 data, or a URL
  }, function(error, response, body){
      if(error) {
          res.json(error);
      } else {
          var imageUrl = response.body.data.link;
          var response = function(res) { console.log(res); }
          var logError = function(err) { console.log(err); }
          // single example
          indico.fer(imageUrl)
          .then(response => {
              db.image.create({
                  url: imageUrl,
                  fave: false,
                  neutral: response.Neutral,
                  happy: response.Happy,
                  sad: response.Sad,
                  surprised: response.Surprise,
                  fearful: response.Fear,
                  angry: response.Angry,
                  createdAt: new Date(),
                  updatedAt: new Date()
              })
              .then(newImage => {
                  res.json({
                      'message': 'image created!!',
                      'image': newImage
                  });
              });
          })
          .catch(logError);
      }
    })
});

// /* DELETE an image */
// router.delete('/:id', (req, res) => {
//     db.image.destroy({
//       where: {
//         id: req.params.id
//       }
//     })
//     .then((imageDestroyed) => {
//       res.status(200).json({'message': 'image deleted', 'image':  imageDestroyed })
//     })
//     .catch(err => {
//       res.json(err)
//     })
//   });
//
//
module.exports = router;
